package starWarsCharacters;
import java.io.Serializable;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import javax.inject.Named;
import javax.enterprise.context.SessionScoped;
import javax.sql.DataSource;
import javax.annotation.Resource;
@Named
@SessionScoped
public class CharacterData implements Serializable{
private static final long serialVersionUID = 1L;
private static final String connection_url = "jdbc:postgresql://localhost:5432/StarWarsDB";
public List<Character> getCharacters() {
List<Character> result = new ArrayList<>();

try {
Class.forName("org.postgresql.Driver").newInstance();
Properties user = new Properties();
user.put("user", "postgres");
user.put("password", "admin");
Connection conn = DriverManager.getConnection(connection_url, user);
try {
String sql = "SELECT * FROM character";
PreparedStatement stat = conn.prepareStatement(sql);
ResultSet rs = null;
stat.execute();
rs = stat.getResultSet();
while(rs.next()) {
Character chr = new Character();
chr.setName(rs.getString(1));
chr.setRace(rs.getString(2));
chr.setDescription(rs.getString(3));
result.add(chr);
}
}
finally {
conn.close();
}

} catch (SQLException e) {
e.printStackTrace();
} catch (InstantiationException e) {
e.printStackTrace();
} catch (IllegalAccessException e) {
e.printStackTrace();
} catch (ClassNotFoundException e) {
e.printStackTrace();
}
return result;
}
}